import tkinter as tk

def roman_to_integer():
    roman_input = entry_roman.get().upper().strip()
    total = 0
    valid = True

    # Validate input
    for i in range(len(roman_input) - 1):
        if roman_input[i] == roman_input[i + 1]:
            if roman_input.count(roman_input[i]) > 3 or roman_input[i] not in ['I', 'X', 'C', 'M']:
                valid = False
                break

    for char in roman_input:
        if char not in roman_dict:
            valid = False
            break

    if not valid:
        label_result.config(text="Geçersiz Roma rakamı girdiniz!", fg="red")
        return

    # Roman to Integer conversion
    i = 0
    while i < len(roman_input):
        current_value = roman_dict[roman_input[i]]
        if i + 1 < len(roman_input):
            next_value = roman_dict[roman_input[i + 1]]
            if current_value < next_value:
                total += next_value - current_value
                i += 2
                continue
        total += current_value
        i += 1

    label_result.config(text=f"Sonuç: {total}", fg="green")


# Roman numeral dictionary
roman_dict = {
    "I": 1, "V": 5, "X": 10, "L": 50,
    "C": 100, "D": 500, "M": 1000
}

# Create the main window
root = tk.Tk()
root.title("Roma Rakamı Dönüştürücü")
root.geometry("500x300")
root.config(padx=20, pady=20, bg="#f4f4f4")

# Add title label
label_title = tk.Label(root, text="Roma Rakamı Dönüştürücü", font=("Arial", 18, "bold"), bg="#f4f4f4")
label_title.pack(pady=10)

# Input field
frame_input = tk.Frame(root, bg="#f4f4f4")
frame_input.pack(pady=10)

label_roman = tk.Label(frame_input, text="Roma Rakamı:", font=("Arial", 14), bg="#f4f4f4")
label_roman.pack(side="left", padx=10)

entry_roman = tk.Entry(frame_input, font=("Arial", 14), width=15)
entry_roman.pack(side="left")

# Convert button
button_convert = tk.Button(root, text="Dönüştür", command=roman_to_integer, font=("Arial", 14), bg="#4CAF50", fg="white")
button_convert.pack(pady=20)

# Result label
label_result = tk.Label(root, text="", font=("Arial", 16), bg="#f4f4f4")
label_result.pack()

# Start the GUI loop
root.mainloop()
